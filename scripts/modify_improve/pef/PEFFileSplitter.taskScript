<?xml version='1.0' encoding='utf-8'?>

<taskScript version="2.0" name="PEFFileSplitter">
	<nicename>PEF File Splitter</nicename>
	<description>Splits a PEF file into several files, one file per volume</description>
	<documentation uri="../../../doc/scripts/PEFFileSplitter.html"/>

	<parameter name="input" value="" required="true">
		<nicename>Input PEF file</nicename>
		<description>A PEF file</description>
		<datatype>
			<file mime="application/x-pef+xml" type="input"/>
		</datatype>
	</parameter>

	<parameter name="output" value="" required="true">
		<nicename>Output folder</nicename>
		<description>Output directory</description>
		<datatype>
			<directory type="output"/>
		</datatype>
	</parameter>

	<parameter name="prefix" value="" required="false">
		<nicename>Filename prefix</nicename>
		<description>Optional filename prefix for the resulting files. If left blank, the filename prefix is derived from the input file.</description>
		<datatype>
			<string/>
		</datatype>
	</parameter>
	
	<parameter name="postfix" value="" required="false">
		<nicename>Filename postfix</nicename>
		<description>Optional filename postfix for the resulting files (typically, '.pef'). If left blank, the filename postfix is derived from the input file.</description>
		<datatype>
			<string/>
		</datatype>
	</parameter>

	<task name="int_daisy_validator" interactive="false">
		<parameter>
			<name>input</name>
			<value>${input}</value>
		</parameter>
		
		<parameter>
			<name>abortThreshold</name>
			<value>ERROR</value>
		</parameter>
		
		<parameter>
			<name>schemas</name>
			<value>pef-2008-1.rng</value>
		</parameter>
	</task>

	<task name="org_pef_pefFileSplitter" interactive="false">
		<parameter>
			<name>input</name>
			<value>${input}</value>
		</parameter>

		<parameter>
			<name>output</name>
			<value>${output}</value>
		</parameter>

		<parameter>
			<name>prefix</name>
			<value>${prefix}</value>
		</parameter>
		
		<parameter>
			<name>postfix</name>
			<value>${postfix}</value>
		</parameter>

	</task>

</taskScript>
