<?xml version="1.0" encoding="utf-8"?>
<!-- Modified build-core.xml in pipeline project to include all jars in lib -->
<project default="all">
	<description>Buildfile for the Daisy Pipeline</description>
	
	<!-- ================================================================== -->
	<!-- Common properties                                                  -->
	<!-- ================================================================== -->
	
	<!-- Timestamp format definition -->
	<tstamp>
		<format property="ISO-TODAY" pattern="yyyyMMdd"/>
	</tstamp>
		
	<property name="release.name" value="pipeline-${ISO-TODAY}"/>
	
	<property name="base.dir" value="."/>
		
	<property name="dmfc.src.dir" value="${base.dir}/src"/>
	<property name="build.dir" value="${base.dir}/bin"/>
	
	<property name="transformers.dir" value="${base.dir}/transformers"/>
	
	<property name="distribution.dir" value="${base.dir}/dist"/>
	<property name="javadoc.dir" value="${base.dir}/doc/api"/>
	
	<!-- ================================================================== -->
	<!-- Fileset definitions                                                -->
	<!-- ================================================================== -->
		
	<!-- Jars required by the util library. The fileset.utilJars fileset is
	     split into two separate patternsets since the order of the JARs
	     is important when constructing the classpath (path.utilJars below)
	     and the fileset itself is unordered. -->
	<patternset id="patternset.utilJars.1">
		<include name="jing-saxon8-patch.jar"/>
	</patternset>
	<patternset id="patternset.utilJars.2">
		<include name="**/*.jar"/>
		<exclude name="jing-saxon8-patch.jar"/>
	</patternset>
	
	<fileset dir="${base.dir}/lib" id="fileset.utilJars">
		<patternset refid="patternset.utilJars.1"/>
		<patternset refid="patternset.utilJars.2"/>
	</fileset>
	
	<!-- Transformers -->
	<fileset dir="${transformers.dir}" id="fileset.transformers">
		<patternset refid="patternset.transformers"/>
	    <exclude name="**/*.java"/>
	    <exclude name="*.jar"/> 
	        		
	    <!-- Jarable... -->
	    <!--exclude name="int_daisy_validator/**/*.*"/>
	    <exclude name="uk_rnib_dtbook2xhtml/**/*.*"/-->        		
	</fileset>
	
	<!-- ================================================================== -->
	<!-- Path definitions                                                   -->
	<!-- ================================================================== -->
	
	<path id="path.utilJars">
		<fileset dir="${base.dir}/lib">
			<patternset refid="patternset.utilJars.1"/>
		</fileset>
		<fileset dir="${base.dir}/lib">
			<patternset refid="patternset.utilJars.2"/>
		</fileset>
	</path>
	
	<path id="path.classpath">
		<dirset dir="${base.dir}">
			<include name="transformers"/>
			<include name="bin/org/daisy/util"/>
		</dirset>		
    </path>
	
	<path id="path.combined">
		<path refid="path.classpath"/>
		<path refid="path.utilJars"/>
		<dirset dir="${base.dir}">
			<include name="src"/>
		</dirset>
	</path>
	
	
	<path id="path.build.transformers">
		<path refid="path.utilJars"/>
		<pathelement location="${build.dir}"/>
		<fileset dir="${base.dir}/transformers">
			<include name="**/*.jar"/>
		</fileset>
	</path>
	
	<!-- ================================================================== -->
	<!-- Patternset definitions                                             -->
	<!-- ================================================================== -->
	
	<!-- The set of transformers to be included -->
	<patternset id="patternset.transformers">
		<include name="**/*.*"/>		
		<exclude name="se_tpb_aligner/**/*.*"/>
		<exclude name="int_daisy_filesetEncryptor/**/*.*"/>
		<exclude name="uk_rnib_odf2dtbook/**/*.*"/>
		<exclude name="se_tpb_speechgenerator/**/*.*"/>
		<exclude name="int_daisy_xukCreator/**/*.*"/>
	</patternset>
	
	<!-- Util library patternset -->
	<patternset id="patternset.util">
		<include name="org/daisy/util/**/*.*"/>
	</patternset>
	
	<patternset id="patternset.framework">
		<include name="**/*.*"/>
		<exclude name="org/daisy/util/**/*.*"/>
	</patternset>	
	
	<!-- Space separated list of required JARs -->
	<pathconvert property="property.manifest.jars"
	             pathsep=" ">
		<path refid="path.utilJars"/>
		<flattenmapper/>
	</pathconvert>
	
	<!-- ================================================================== -->
	<!-- Private targets                                                    -->
	<!-- ================================================================== -->
	
	<!-- - - - - - - - - - - - - - - - - -
	      target: createDistributionDir
	      
	      Creates the distribution dirctory.
	     - - - - - - - - - - - - - - - - - -->
	<target name="createDistributionDir">
		<mkdir dir="${distribution.dir}"/>
	</target>
	
	
	<!-- - - - - - - - - - - - - - - - - -
	      target: createJavadocDirs
	      
	      Creates the distribution dirctory.
	     - - - - - - - - - - - - - - - - - -->
	<target name="createJavadocDirs">
		<mkdir dir="${javadoc.dir}"/>
	</target>
	
	
	<!-- - - - - - - - - - - - - - - - - -
	      target: removeClasses
	      
	      Cleans up old class files so that the new ones can be built.
	     - - - - - - - - - - - - - - - - - -->
	<target name="removeClasses">
		<mkdir dir="${build.dir}"/>
		<delete dir="${build.dir}/org">
			<fileset dir="${build.dir}" includes="**/*.class"/>
		</delete>
		<delete>
			<fileset dir="${transformers.dir}" includes="**/*.class"/>
		</delete>
	</target>
	
	
	<!-- - - - - - - - - - - - - - - - - -
	      target: compile
	      
	      Compiles all src classes.
	     - - - - - - - - - - - - - - - - - -->
	<target name="compile" depends="removeClasses">
		<mkdir dir="${build.dir}"/>
		<javac 	srcdir="${dmfc.src.dir}" 
				destdir="${build.dir}" 
				includes="**/*.java" 
				debug="true" encoding="UTF-8" target="1.5">
			<classpath refid="path.utilJars"/>
		</javac>
		<javac 	srcdir="${transformers.dir}" 
				destdir="${transformers.dir}" 
				includes="**/*.java" 
				debug="true" encoding="UTF-8" target="1.5">
			<classpath refid="path.build.transformers"/>
		</javac>
		<copy todir="${build.dir}" failonerror="true" overwrite="false">
			<fileset dir="${dmfc.src.dir}">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
	</target>
	
	
	<!-- ================================================================== -->
	<!-- Public targets                                                     -->
	<!-- ================================================================== -->
	
	<!-- ================================= 
		  target: all
		  
		  Builds a binary release package, source packages and documentation.
		 ================================= -->
	<target name="all" 
		    description="Builds a binary release package, source package and documentation." 
		    depends="buildReleaseZip,buildSrcZip,buildJavadoc"/>
			
	
	<!-- ================================= 
		  target: buildSrcZip
		  
		  Builds a zipfile containing the source distribution.
		 ================================= -->
	<target name="buildSrcZip" 
			description="Builds a zipfile containing the source distribution."
			depends="createDistributionDir">
		<zip zipfile="${distribution.dir}/${release.name}-src.zip" >			
			<fileset dir="${base.dir}">
				<include name="*.*"/>
				<include name="src/**/*.*"/>				
				<include name="doc/**/*.*"/>
				<exclude name="doc/dev_old/**/*.*"/>
				<include name="META-INF/**/*.*"/>
				<include name="scripts/**/*.*"/>				
				<include name="licenses/**/*.*"/>
			</fileset>
			<zipfileset dir="${transformers.dir}" prefix="transformers">
				<patternset refid="patternset.transformers"/>
				<not>
					<filename name="**/*.class"/>
				</not>
				<not>
					<filename name="**/*.exe"/>
				</not>
			</zipfileset>
		</zip>
	</target>
	
	
	<!-- ================================= 
		  target: buildJavadoc
		 ================================= -->
	<target name="buildJavadoc" 
			description="Creates three javadoc archives in the distribution folder"
			depends="createDistributionDir">
		
		<javadoc destdir="${javadoc.dir}/util" 			     
			     classpathref="path.combined"
			     windowtitle="DAISY Utility Library API documentation">
			<fileset dir="${base.dir}/src">
				<patternset refid="patternset.util"/>
				<and>					
					<filename name="**/*.java"/>
				</and>
			</fileset>
		</javadoc>
		<zip zipfile="${distribution.dir}/org.daisy.util-docs-${ISO-TODAY}.zip" >
			<fileset dir="${javadoc.dir}/util" includes="**"/>
		</zip>		
		
		<javadoc destdir="${javadoc.dir}/framework" 			     
			     classpathref="path.combined"
			     windowtitle="Daisy Pipeline Framework API documentation">
			<fileset dir="${base.dir}/src">
				<patternset refid="patternset.framework"/>
				<and>					
					<filename name="**/*.java"/>
				</and>
			</fileset>
		</javadoc>
		<zip zipfile="${distribution.dir}/org.daisy.pipeline-framework-docs-${ISO-TODAY}.zip" >
			<fileset dir="${javadoc.dir}/framework" includes="**"/>
		</zip>
				
		<javadoc destdir="${javadoc.dir}/transformers" 
			     classpathref="path.combined"
		         windowtitle="Daisy Pipeline Transformer API documentation">
			<fileset dir="${base.dir}/transformers">
				<patternset refid="patternset.transformers"/>
				<and>					
					<filename name="**/*.java"/>
				</and>
			</fileset>
		</javadoc>
		<zip zipfile="${distribution.dir}/org.daisy.pipeline-transformers-docs-${ISO-TODAY}.zip" >
			<fileset dir="${javadoc.dir}/transformers" includes="**"/>
		</zip>
		
	</target>
	
	
	<!-- ================================= 
		  target: buildUtil
		  
		  Builds the org.daisy.util.jar utility library
		  into a separate JAR. The sources are built
		  into a zip archive.		  
	     ================================= -->
	<target name="buildUtil"
			description="Builds the util library in a separate JAR"
			depends="createDistributionDir">
		<delete file="${distribution.dir}/org.daisy.util.jar"/>
		<jar jarfile="${distribution.dir}/org.daisy.util.jar">
			<fileset dir="${base.dir}/bin">
				<patternset refid="patternset.util"/>
			</fileset>
			<metainf dir="${base.dir}/META-INF">
				<include name="services/**/*.*"/>
			</metainf>
			<manifest>
				<attribute name="Class-Path" value="${property.manifest.jars}"/>
				<attribute name="Build-Date" value="${ISO-TODAY}"/>
			</manifest>			
		</jar>		
	</target>
	
	
	<!-- ================================= 
	      target: buildTransformers
	      
	      Builds the jarable transformers into separate
	      JARs.
	     ================================= -->
	<target name="buildTransformers"
				description="Builds the jarable transformers"
				depends="createDistributionDir">
		<mkdir dir="${distribution.dir}/transformers"/>
		
		<!-- int_daisy_validator -->
		<jar jarfile="${distribution.dir}/transformers/int_daisy_validator.jar">
			<fileset dir="${base.dir}/transformers">
				<include name="int_daisy_validator/**/*.*"/>
				<not>
					<filename name="**/*.java"/>
				</not>
			</fileset>
		</jar>		

		<!-- uk_rnib_dtbook2xhtml -->
		<!--jar jarfile="${distribution.dir}/transformers/uk_rnib_dtbook2xhtml.jar">
			<fileset dir="${base.dir}/transformers">
				<include name="uk_rnib_dtbook2xhtml/**/*.*"/>
				<not>
					<filename name="**/*.java"/>
				</not>
			</fileset>
		</jar-->
						
	</target>
	
	
	<!-- ================================= 
	      target: buildCoreJar
	      
	      Builds a jar file containing the pipeline core.
	     ================================= -->
	<target name="buildCoreJar"
			description="Builds the core JAR"
			depends="createDistributionDir, compile">
		<jar jarfile="${distribution.dir}/pipeline.jar">
			<fileset dir="${base.dir}/bin">
				<include name="org/daisy/pipeline/**/*.*"/>
				<exclude name="**/*.java"/>
			</fileset>
			<manifest>
				<attribute name="Class-Path" value="lib/org.daisy.util.jar"/>
				<attribute name="Build-Date" value="${ISO-TODAY}"/>
			</manifest>			
		</jar>
	</target>
	
	
	<!-- ================================= 
		      target: buildJarDist
		      
		      Builds a zip file containing the jars needed to run the pipeline.
		     ================================= -->
	<target name="buildJarDist"
			description="Packages the Jars needed to run dmfc"
			depends="buildCoreJar, buildUtil">
		<zip zipfile="${distribution.dir}/jarpack.zip">
			<fileset refid="fileset.utilJars"/>
			<fileset dir="${distribution.dir}">
				<include name="pipeline.jar"/>
				<include name="org.daisy.util.jar"/>
			</fileset>
		</zip>
	</target>

	
	<!-- =====================================================================
    	  target: buildRealeaseZip
      
	      Builds a zipfile containing everything needed in a command line release
	     ========================================================================= -->
	<target name="buildReleaseZip"
			depends="buildCoreJar,buildUtil,createDistributionDir"
			description="Builds a zipfile containing everything needed in a command line release">
		<zip destfile="${distribution.dir}/${release.name}.zip">
			<!-- Pipeline core -->
			<zipfileset dir="${distribution.dir}">
				<include name="pipeline.jar"/>				
			</zipfileset>
			<!-- Util library -->
			<zipfileset dir="${distribution.dir}" prefix="lib">
				<include name="org.daisy.util.jar"/>				
			</zipfileset>
			<!-- Required JARs -->
			<zipfileset refid="fileset.utilJars" prefix="lib"/>
			<!-- Transformers -->
			<zipfileset refid="fileset.transformers" prefix="transformers"/>
			<!-- Property files -->
			<zipfileset dir="${base.dir}/bin">
				<include name="pipeline.properties"/>
				<include name="pipeline.user.properties"/>
				<include name="poolman.xml"/>
			</zipfileset>
			<!-- Pipeline RMI files -->
			<zipfileset dir="${base.dir}/rmi" prefix="rmi">
				<include name="**/*.*"/>
			</zipfileset>
			<!-- Shell scripts -->
			<zipfileset dir="${base.dir}/launchers" filemode="755">
				<include name="pipeline.sh"/>
				<include name="pipeline.bat"/>
			</zipfileset>
			<!-- Scripts -->
			<zipfileset dir="${base.dir}/scripts" prefix="scripts">
				<include name="**/*.*"/>
				<exclude name="_dev/**/*.*"/>
			</zipfileset>
			<!-- Documentation -->
			<zipfileset dir="${base.dir}/doc" prefix="doc">
				<include name="developer/**/*.*"/>
				<include name="enduser/**/*.*"/>
				<include name="scripts/**/*.*"/>
				<include name="transformers/**/*.*"/>
				<include name="*.html"/>
				<include name="*.css"/>
			</zipfileset>
			<!-- Documentation -->
			<zipfileset dir="${base.dir}/licenses" prefix="licenses">
				<include name="**/*.*"/>
			</zipfileset>					
		</zip>
	</target>		
	
</project>